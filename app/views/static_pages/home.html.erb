<!DOCTYPE html>
<meta charset="utf-8">
<style>

path {
  stroke-linejoin: round;
}

.districts {
  fill: #bbb;
}

.districts :hover {
  fill: orange;
}

.district-boundaries {
  pointer-events: none;
  fill: none;
  stroke: #ddd;
}

.state-boundaries {
  pointer-events: none;
  fill: none;
  stroke: #fff;
  stroke-width: 1.5px;
}

</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/queue.v1.min.js"></script>
<script src="http://d3js.org/topojson.v1.min.js"></script>
<script src="sprintf.js"></script>

<script>

var districts; 
var stateabbr2id; 
var congress;
$.getJSON( "/stateinfo.json", function( data ) {
  districts = data
});
$.getJSON( "/congress.json", function( data ) {
  congress = data
});
$.getJSON( "/stateabbr2id.json", function( data ) {
  stateabbr2id = data
});

</script>

<script>

var width = 960,
    height = 500;
var centered;

var color = d3.scale.linear()
    .domain([0, 50])
    .range(["#4575b4", "#a50026"])
    .interpolate(d3.interpolateHcl);

var projection = d3.geo.albersUsa()
    .scale(1070)
    .translate([width / 2, height / 2]);

var path = d3.geo.path()
    .projection(projection);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var g = svg.append("g");
var districtPaths = {};

queue()
    .defer(d3.json, "/us.json")
    .defer(d3.json, "/us-congress-1132.json")
    .await(ready);

function ready(error, us, congress) {
  g.append("defs").append("path")
      .attr("id", "land")
      .datum(topojson.feature(us, us.objects.land))
      .attr("d", path);

  g.append("clipPath")
      .attr("id", "clip-land")
    .append("use")
      .attr("xlink:href", "#land");

  districtPath = g.append("g")
      .attr("class", "districts")
      .attr("clip-path", "url(#clip-land)")
    .selectAll("path");

  g.append("g")
      .attr("class", "districts")
      .attr("clip-path", "url(#clip-land)")
    .selectAll("path")
      .data(topojson.feature(congress, congress.objects.districts).features)
    .enter().append("path")
      .attr("d", path)
      .on("click", clicked)
    .append("title")
      .text(function(d) { return d.id; })
    .append("id")
      .text(function(d) { return d.properties.STATEFP + d.properties.CD113FP; });

  topojson.feature(congress, congress.objects.districts)
    .features
    .forEach(render);


  g.append("path")
    .attr("class", "district-boundaries")
    .attr("clip-path", "url(#clip-land)")
    .datum(topojson.mesh(congress, congress.objects.districts, function(a, b) { return (a.id / 1000 | 0) === (b.id / 1000 | 0); }))
    .attr("d", path);

  g.append("path")
    .attr("class", "state-boundaries")
    .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
    .attr("d", path);

  $(userZip).keyup(function(event){
    if(event.keyCode == 13){
        $(submitbutton).click();
    }
  });
}


function render(d) {
  //console.log("state = " + d.properties.STATEFP + ", district = " + d.properties.CD113FP);
  var state = parseInt(d.properties.STATEFP);
  var district = parseInt(d.properties.CD113FP); 
  if (typeof districtPaths[state] == "undefined") {
     districtPaths[state] = {}
  }
  if (state == "01") {
   var a=1;

  }
  districtPaths[state][district] = d;
}


function clicked(d) {
  var x, y, k;
  //d = cali8;
//  console.log("state = " + d.properties.STATEFP + ", district = " + d.properties.CD113FP);
  console.log(d);
 
  if (d && centered !== d) {
    console.log("in");
    var centroid = path.centroid(d);
    x = centroid[0];
    y = centroid[1];
    k = 4;
    centered = d;
  } else {
    console.log("out");
    x = width / 2;
    y = height / 2;
    k = 1;
    centered = null;
  }

  g.transition()
      .duration(750)
      .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")scale(" + k + ")translate(" + -x + "," + -y + ")")
      .style("stroke-width", centered == null ? "1" : 1.5 / k + "px");
  
}

function highlightDistrict(d) {
  g.selectAll("path")
     .style("fill", function(t) { 
        if (typeof t.properties == "undefined") {
   	   return null;
        }
        for(i in d) {
           if (t.properties.GEOID == d[i].properties.GEOID) {
              return "orange";
           }
        }
        return null;
     });
}

function findZip() {
   var zip = $(userZip).val();
   var paths = [];
   var selState;
   var selDistricts;
   var selCongress = [];
   var selSenators = [];   
   for (state in districts) {
      if (typeof districts[state][zip] != "undefined") {
         selState = state;
         selDistricts = districts[state][zip];
         clicked(districtPaths[state][districts[state][zip][0]]);
         districts[state][zip].map( function(item) {
            paths.push(districtPaths[state][item]);
         });
         break;
      }
   }
   
   highlightDistrict(paths);
   
   congress["sen"].forEach(function(element, index, array) {
      sid = stateabbr2id[element["state"]];
      if (sid == selState) {
         selSenators.push(element);
      }
   });

   congress["con"].forEach(function(element, index, array) {
      //console.log(element);

      if (element["first"] == "Martha") {
        var a=1;
      }
      
      sid = stateabbr2id[element["state"]];
      if (sid != selState) {
         return;
      }
      if (jQuery.inArray(element["district"], selDistricts) != -1) {
         selCongress.push(element);
      }
   });

   $(districtInfo).html("<h2>Senators</h2>");
   selSenators.forEach(function(elem, index) {
      //$(districtInfo).append("<li>{0} {1} {2}" + elem["first"] + " " + elem["last"]);
      $(districtInfo).append(
         sprintf("<li>%s %s (%s)", elem["first"], elem["last"], elem["party"].substr(0,1)));
   });
   $(districtInfo).append("<h2>Congressmen</h2>");
   selCongress.forEach(function(elem, index) {
      $(districtInfo).append(
         sprintf("<li>%s %s (%s)", elem["first"], elem["last"], elem["party"].substr(0,1)));
      //$(districtInfo).append("<li>Congress: " + elem["first"] + " " + elem["last"]);
   });

}

</script>
<br>
Enter your zip
<input id="userZip" value="36105"/> <input id="submitbutton" type="button" onclick="findZip()" value="submit"/>
<p>
<spam id="districtInfo"/>

